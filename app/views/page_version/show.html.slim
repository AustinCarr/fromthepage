=render({ :partial => '/shared/page_tabs', :locals => { :selected => 2, :page_id => @page.id } })

-selected_version_date = @selected_version.created_on.strftime("%b %d, %Y %I:%M %p")
-selected_version_user = link_to(@selected_version.user.display_name, { :controller => 'user', :action => 'profile', :user_id => @selected_version.user.id })

table.page-versions
  tr
    th =pluralize(@page.page_versions.size, 'revision')
    th =="#{selected_version_user} at #{selected_version_date}"
    th Revision changes
  tr
    td.page-version-list
      -@page.page_versions.each do |version|
        =link_to({ :action => 'show', :page_version_id => version.id }, class: ('selected' if version == @selected_version))
          =time_tag(version.created_on)
            =version.created_on.strftime("%b %d, %Y")
          span =version.user.display_name

    td.page-version
      h4(data-diff-title="changed" data-empty="Untitled") =@selected_version.title
      div(data-diff-transcription="changed" data-empty="No transcription provided")
        ==xml_to_html(@selected_version.xml_transcription)
      -if @work.supports_translation
        hr
        h4 Translation
        div(data-diff-translation="changed" data-empty="No translation provided")
          ==xml_to_html(@selected_version.xml_translation)

    td.page-version
      h4(data-diff-title="original" data-empty="Untitled") =(@previous_version.title rescue "")
      div(data-diff-transcription="original" data-empty="No transcription provided")
        ==xml_to_html((@previous_version.xml_transcription rescue ""))
      -if @work.supports_translation
        hr
        h4 Translation
        div(data-diff-translation="original" data-empty="No translation provided")
          ==xml_to_html((@previous_version.xml_translation rescue ""))

javascript:
  $(function() {
    $('.page-versions')
      .prettyTextDiff({
        changedContainer:  '[data-diff-title=changed]',
        originalContainer: '[data-diff-title=original]',
        diffContainer:     '[data-diff-title=original]'
      })
      .prettyTextDiff({
        changedContainer:  '[data-diff-transcription=changed]',
        originalContainer: '[data-diff-transcription=original]',
        diffContainer:     '[data-diff-transcription=original]'
      })
      .prettyTextDiff({
        changedContainer:  '[data-diff-translation=changed]',
        originalContainer: '[data-diff-translation=original]',
        diffContainer:     '[data-diff-translation=original]'
      });

    // Awful workaround to make sure containers
    // does not contain empty text nodes
    $('[data-empty]').each(function() {
      $element = $(this);
      if(!$.trim($element.html())) {
        $element.empty();
      }
    });
  });
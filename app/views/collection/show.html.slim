=render({ :partial => '/shared/collection_tabs', :locals => { :selected => 1, :collection_id => @collection.id } })

.columns
  article.maincol
    -if @collection.intro_block
      h2 About
      p ==@collection.intro_block
    h2 Works
    .works
      -@collection.works.each do |work|
        .work
          h5.work_title =link_to work.title, { :controller => 'display', :action => 'read_work', :work_id => work.id }
          p.work_snippet =truncate(strip_tags(work.description), length: 300, separator: ' ') || ''
          .work_stats
            -progress_annotated = work.work_statistic.pct_annotated.round
            -progress_transcribed = work.work_statistic.pct_transcribed.round
            span ="#{pluralize(work.work_statistic.total_pages, 'page')}: #{progress_annotated}% indexed, #{progress_transcribed}% transcribed"
            span
              span.progress
                span(style="width:#{progress_annotated}%")
                span(style="width:#{progress_transcribed - progress_annotated}%")

    h2 Subjects
    ==display_categories(@collection.categories, nil) do |c|
      -controller.render_to_string(:partial => '/category/category_link', :locals => { :category => c, :article_partial => '/category/article_link' })
    p
      |Owner:
      =link_to @collection.owner.display_name, { :controller => 'user', :action => 'profile', :user_id => @collection.owner.id }
  aside.sidecol
    =form_tag({:controller => 'display', :action => 'search'}, :method => :get) do
      =hidden_field_tag('collection_id', @collection.id)
      =search_field_tag 'search_string', nil, :placeholder => 'Search in collection...'
      =submit_tag 'Search'
    h3 Recent Notes
    ul
      -@collection.notes.limit(10).each do |note|
        li
          =link_to(truncate(note.title, :length => 100),
                { :controller => 'display',
                  :action => 'display_page',
                  :page_id => note.page_id,
                  :anchor => "comment_#{note.id}" })
          |by
          =link_to(note.user.display_name,
                { :controller => 'user',
                  :action => 'profile',
                  :user_id => note.user.id })
          =time_ago_in_words(note.created_at)
    h3 Recent Edits
    =deeds_for({:collection => true, :limit => 10, :types => [Deed::PAGE_TRANSCRIPTION, Deed::PAGE_EDIT, Deed::ARTICLE_EDIT]})